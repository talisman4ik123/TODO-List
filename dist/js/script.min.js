/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n(function () {\r\n    function createTodoTitle(title) {\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.textContent = title;\r\n        h1.classList.add(\"todo-app__title\");\r\n        return h1;\r\n    }\r\n\r\n    function createTodoForm() {\r\n        const form = document.createElement(\"form\");\r\n        form.classList.add(\"todo-app__form\");\r\n        const formFieldset = document.createElement(\"fieldset\");\r\n        formFieldset.classList.add(\"todo-app__fieldset\");\r\n        form.append(formFieldset);\r\n\r\n        const formTextarea = document.createElement(\"textarea\");\r\n        formTextarea.classList.add(\"todo-app__textarea\");\r\n        formTextarea.placeholder = \"Введите новое дело:\";\r\n        formTextarea.style.marginRight = \"20px\";\r\n        formFieldset.append(formTextarea);\r\n\r\n        const btnGroup = document.createElement(\"div\");\r\n        btnGroup.classList.add(\"todo-app__btn-group\");\r\n        formFieldset.append(btnGroup);\r\n\r\n        const addBtn = document.createElement(\"button\");\r\n        addBtn.classList.add(\"todo-app__btn-add\");\r\n        addBtn.textContent = \"Добавить\";\r\n        btnGroup.append(addBtn);\r\n\r\n        const filtersWrapper = document.createElement(\"div\");\r\n        filtersWrapper.classList.add(\"todo-app__filter-wrapper\");\r\n        btnGroup.append(filtersWrapper);\r\n\r\n        const filters = document.createElement(\"ul\");\r\n        filters.classList.add(\"todo-app__filter-list\");\r\n        const items = [\r\n            document.createElement(\"li\"),\r\n            document.createElement(\"li\"),\r\n            document.createElement(\"li\")\r\n        ];\r\n        items[0].textContent = \"активные\";\r\n        items[1].textContent = \"завершенные\";\r\n        items[2].textContent = \"удаленные\";\r\n        for (let item of items) {\r\n            item.classList.add(\"todo-app__filter-item\");\r\n            filters.append(item);\r\n        }\r\n        filtersWrapper.append(filters);\r\n\r\n        filtersWrapper.innerHTML += `<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n        <!DOCTYPE svg>\r\n        <svg class=\"todo-app__svg-arrow\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n             width=\"123.97px\" height=\"123.97px\" viewBox=\"0 0 123.97 123.97\" style=\"enable-background:new 0 0 123.97 123.97;\"\r\n             xml:space=\"preserve\">\r\n        <g>\r\n            <path d=\"M51.802,96.062c2.801,2.801,6.5,4.2,10.2,4.2s7.4-1.399,10.2-4.2l47.3-47.3c5.5-5.5,6.101-14.6,0.8-20.3\r\n                c-5.6-6.1-15.1-6.3-20.899-0.5l-30.4,30.3c-3.899,3.9-10.2,3.9-14.1,0l-30.3-30.3c-5.801-5.8-15.301-5.7-20.9,0.5\r\n                c-5.3,5.7-4.8,14.8,0.8,20.3L51.802,96.062z\"/>\r\n        </g>\r\n        </svg>`;\r\n\r\n        return [form, formTextarea, addBtn];\r\n    }\r\n\r\n    function createTodoItem(textareaValue) {\r\n        const todoItem = document.createElement(\"li\");\r\n        todoItem.classList.add(\"todo-app__item\");\r\n\r\n        const todoItemText = document.createElement(\"p\");\r\n        todoItemText.classList.add(\"todo-app__text\");\r\n        todoItemText.textContent = textareaValue;\r\n        todoItem.append(todoItemText);\r\n\r\n        return todoItem;\r\n    }\r\n\r\n    function createTodoList(textareaValue, todoWrapper) {\r\n        if (textareaValue != \"\") {\r\n            if (document.querySelector(\".todo-app__list\") === null) {\r\n                const todoList = document.createElement(\"ul\");\r\n                todoList.classList.add(\"todo-app__list\");\r\n                todoWrapper.append(todoList);\r\n\r\n                const todoItem = createTodoItem(textareaValue);\r\n                todoList.append(todoItem);\r\n            } else {\r\n                const todoList = document.querySelector(\".todo-app__list\");\r\n                const todoItems = document.querySelectorAll(\".todo-app__item\");\r\n                let count = 0;\r\n                todoItems.forEach(item => {\r\n                    if (item.querySelector(\".todo-app__text\").textContent == textareaValue) {\r\n                        count++;\r\n                    }\r\n                });\r\n                if (count == 0) {\r\n                    const todoItem = createTodoItem(textareaValue);\r\n                    todoList.append(todoItem);\r\n                } else {\r\n                    alert(\"Данная задача уже находится в списке активных задач!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n        const todoWrapper = document.getElementById('todo-app');\r\n\r\n        const todoTitle = createTodoTitle(\"Список дел\");\r\n        todoWrapper.append(todoTitle);\r\n\r\n        const formElements = createTodoForm();\r\n        const todoForm = formElements[0];\r\n        todoWrapper.append(todoForm);\r\n        const todoTextarea = formElements[1];\r\n        const todoAddBtn = formElements[2];\r\n\r\n        todoAddBtn.addEventListener(\"click\", (e) => {\r\n            e.preventDefault();\r\n            createTodoList(todoTextarea.value, todoWrapper);\r\n        });\r\n    });\r\n})();\n\n//# sourceURL=webpack://gulp-start/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;